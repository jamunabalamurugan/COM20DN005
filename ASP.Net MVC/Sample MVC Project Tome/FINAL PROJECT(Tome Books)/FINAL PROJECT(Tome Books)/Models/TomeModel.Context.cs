//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FINAL_PROJECT_Tome_Books_.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TomeEntities : DbContext
    {
        public TomeEntities()
            : base("name=TomeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<BookAvailability> BookAvailabilities { get; set; }
        public virtual DbSet<BookDetail> BookDetails { get; set; }
        public virtual DbSet<CartDetail> CartDetails { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<FeedbackDetail> FeedbackDetails { get; set; }
        public virtual DbSet<Membership> Memberships { get; set; }
        public virtual DbSet<MembershipDetail> MembershipDetails { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<PublisherDetail> PublisherDetails { get; set; }
        public virtual DbSet<RatingDetail> RatingDetails { get; set; }
        public virtual DbSet<Shipper> Shippers { get; set; }
        public virtual DbSet<Subcategory> Subcategories { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<DisplayByAuthor_Result> DisplayByAuthor(string authorName)
        {
            var authorNameParameter = authorName != null ?
                new ObjectParameter("authorName", authorName) :
                new ObjectParameter("authorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByAuthor_Result>("DisplayByAuthor", authorNameParameter);
        }
    
        public virtual ObjectResult<DisplayByBookName_Result> DisplayByBookName(string bookName)
        {
            var bookNameParameter = bookName != null ?
                new ObjectParameter("bookName", bookName) :
                new ObjectParameter("bookName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByBookName_Result>("DisplayByBookName", bookNameParameter);
        }
    
        public virtual ObjectResult<DisplayByCategory_Result> DisplayByCategory(string categoryName)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByCategory_Result>("DisplayByCategory", categoryNameParameter);
        }
    
        public virtual ObjectResult<DisplayByLanguage_Result> DisplayByLanguage(string language)
        {
            var languageParameter = language != null ?
                new ObjectParameter("language", language) :
                new ObjectParameter("language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByLanguage_Result>("DisplayByLanguage", languageParameter);
        }
    
        public virtual ObjectResult<DisplayByPublisher_Result> DisplayByPublisher(string publisherName)
        {
            var publisherNameParameter = publisherName != null ?
                new ObjectParameter("publisherName", publisherName) :
                new ObjectParameter("publisherName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByPublisher_Result>("DisplayByPublisher", publisherNameParameter);
        }
    
        public virtual ObjectResult<DisplayByRating_Result> DisplayByRating(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("bookID", bookID) :
                new ObjectParameter("bookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByRating_Result>("DisplayByRating", bookIDParameter);
        }
    
        public virtual ObjectResult<DisplayBySubcategory_Result> DisplayBySubcategory(string subcategoryName)
        {
            var subcategoryNameParameter = subcategoryName != null ?
                new ObjectParameter("subcategoryName", subcategoryName) :
                new ObjectParameter("subcategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayBySubcategory_Result>("DisplayBySubcategory", subcategoryNameParameter);
        }
    
        public virtual ObjectResult<DisplayByViewCount_Result> DisplayByViewCount(Nullable<int> viewCount)
        {
            var viewCountParameter = viewCount.HasValue ?
                new ObjectParameter("viewCount", viewCount) :
                new ObjectParameter("viewCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayByViewCount_Result>("DisplayByViewCount", viewCountParameter);
        }
    
        public virtual ObjectResult<DisplayEconomicalBooks_Result> DisplayEconomicalBooks(Nullable<int> economicalbooks)
        {
            var economicalbooksParameter = economicalbooks.HasValue ?
                new ObjectParameter("economicalbooks", economicalbooks) :
                new ObjectParameter("economicalbooks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayEconomicalBooks_Result>("DisplayEconomicalBooks", economicalbooksParameter);
        }
    
        public virtual ObjectResult<DisplayExpensiveBooks_Result> DisplayExpensiveBooks(Nullable<int> expensivebooks)
        {
            var expensivebooksParameter = expensivebooks.HasValue ?
                new ObjectParameter("expensivebooks", expensivebooks) :
                new ObjectParameter("expensivebooks", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayExpensiveBooks_Result>("DisplayExpensiveBooks", expensivebooksParameter);
        }
    
        public virtual ObjectResult<NewOnes_Result> NewOnes(Nullable<int> publishedbook)
        {
            var publishedbookParameter = publishedbook.HasValue ?
                new ObjectParameter("publishedbook", publishedbook) :
                new ObjectParameter("publishedbook", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewOnes_Result>("NewOnes", publishedbookParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<decimal>> DisplayCartDetails(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("DisplayCartDetails", userIDParameter);
        }
    
        public virtual int DisplayCartDetails1(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DisplayCartDetails1", userIDParameter);
        }
    }
}
